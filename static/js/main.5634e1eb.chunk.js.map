{"version":3,"sources":["reportWebVitals.js","project2/components/intro.js","project2/components/header.js","project2/components/category.js","project2/components/selected.js","project2/components/questions.js","project2/components/result.js","project2/components/game.js","App.js","index.js"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Intro","children","className","Header","isIntro","restartGame","onClick","src","alt","Category","name","id","logo","setCategory","selected","Selected","category","renderHeader","useState","background","setBackground","useEffect","fetch","res","json","categories","toLowerCase","backgrounds","style","backgroundImage","backgroundSize","class","prev","started","Answer","content","chosenAnswer","letter","checkNormalQuestion","answerStyle","correct","AnswerDrag","value","index","draggableId","provided","draggableProps","dragHandleProps","ref","innerRef","Questions","setFinished","movePointsUp","number","type","totalQuestions","examples","answers","myDroppedAnswers","points","question","setQuestion","setChosenAnswer","loadQuestion","goodChoose","newQuestion","questions","dragable","normal","Object","keys","length","reduce","acc","curr","answer","setTimeout","got","max","flag","i","j","checkDragableQuestion","map","el","onDragEnd","result","destination","source","droppableId","newStartValuesArray","push","splice","newStartValuesObject","A","B","C","D","direction","dragAnswerStyle","doneExamples","droppableProps","placeholder","Result","tryAgain","restOfCategories","setRestOfCategories","temp","Game","setCategories","finished","setPoints","toRender","newCategories","toUpperCase","questionType","questionNumber","questionTotal","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5634e1eb.chunk.js","sourcesContent":["const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\r\n\r\nconst Intro = ({children}) => {\r\n    return (\r\n        <div className='intro__wrapper'>\r\n\t\t{children}\r\n\t</div>\r\n    )\r\n}\r\n\r\nexport default Intro","import React from 'react'\r\n\r\nexport const Header = ({ children, isIntro, restartGame }) => {\r\n    return (\r\n        <div className='header__wrap'>\r\n<div className='header__title'>\r\nQuiz { isIntro ? null : <img onClick={restartGame} src='./assets/zamknij_x.svg' alt=\"zamknij\"/>}\r\n</div>\r\n<div className='header__subtitle'>\r\n\t\t\t\t\t{children}\r\n\t\t\t\t</div>\r\n</div>\r\n    )\r\n}\r\n\r\nexport default Header","import React from 'react'\r\n\r\nconst Category = ({ name=null, id=null, logo=null, setCategory=null, selected=''}) => {\r\n    return (\r\n        <div className={`category__wrap${selected}`}>\r\n\t\t<div className='category__logo'>\r\n\t\t<img src={logo} alt=\"logo\"/>\r\n\t\t</div>\r\n\t\t<div className='category__title'>\r\n\t\t{name}\r\n\t\t</div>\r\n\t\t</div>\r\n    )\r\n}\r\n\r\nexport default Category","import React,{useState, useEffect} from 'react'\r\n\r\nconst Selected = ({children, category, setCategory, renderHeader }) => {\r\n\tconst[background,setBackground]=useState(null)\r\n\r\n\t\tconst loadBackground = () => {\r\n            fetch('./data.json').then(res => res.json()).then(res => {\r\n            \tsetBackground(res.categories.[category.toLowerCase()].backgrounds.selected)\r\n            \t})\r\n        }\r\n\r\n    useEffect(loadBackground,[])         \t\r\n\r\n    return (\r\n        <div className='selected__wrapper' style={{backgroundImage: `url(\"${background}\")`, backgroundSize: \"cover\"}}>\r\n\t\t\t{renderHeader()}\r\n\t\t\t<div class='selected__content'>\r\n\t\t\t\t\t<div class='selected__item'>\r\n\t\t\t\t{children}\r\n\t\t\t\t</div>\r\n\t\t\t\t<button className='forward__wrap' onClick={()=>{setCategory(prev=>({...prev, started:true}))}}>\r\n\t\t\t\t\t<div className='forward__text'>\r\n\t\t\t\t\t\tROZPOCZNIJ\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t<img src=\"./assets/button_strzałka.svg\" alt=\"rozpocznij\"/>\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n    )\r\n}\r\n\r\nexport default Selected","import React, { useState, useEffect } from 'react'\r\nimport { DragDropContext, Droppable, Draggable } from 'react-beautiful-dnd'\r\n\r\nconst Questions = ({ category, setFinished, movePointsUp, renderHeader }) => {\r\n        const [question, setQuestion] = useState({ \r\n            category: category.toLowerCase(), \r\n            number: 0, type: null,\r\n            totalQuestions: null,\r\n            content: null,\r\n            examples: [],\r\n            answers: { 'A.': null, 'B.': null, 'C.': null, 'D.': null, 'E.': null },\r\n            myDroppedAnswers:{},\r\n            correct: null,\r\n            points: 0 })\r\n\r\n        const [chosenAnswer, setChosenAnswer] = useState({\r\n            correct: null,\r\n            content: null\r\n        })\r\n\r\n        const[background,setBackground]=useState(null)\r\n        const loadQuestion = (goodChoose = false) => {\r\n            fetch('./data.json').then(res => res.json()).then(res => {\r\n                let newQuestion = res.categories[question.category].questions[`q${question.number+1}`]\r\n            \tif(newQuestion.type==\"DragNDrop\"){\r\n            \t\tsetBackground(res.categories[question.category].backgrounds.dragable)\r\n            \t}\r\n            \telse if(newQuestion.type==\"normal\"){\r\n            \t\tsetBackground(res.categories[question.category].backgrounds.normal)\r\n            \t}            \t\r\n                setQuestion(prev => ({\r\n                    ...prev,\r\n                    number: prev.number + 1,\r\n                    totalQuestions: prev.number == 0 ? Object.keys(res.categories[question.category].questions).length : prev.totalQuestions,\r\n                    content: newQuestion.question,\r\n                    examples: newQuestion.type == 'DragNDrop' ? newQuestion.examples : null,\r\n                    answers: {\r\n                        'A.': newQuestion.answers[0],\r\n                        'B.': newQuestion.answers[1],\r\n                        'C.': newQuestion.answers[2],\r\n                        'D.': newQuestion.answers[3],\r\n                        'E.': newQuestion.answers[4]\r\n                    },\r\n                    myDroppedAnswers: newQuestion.type == 'DragNDrop' ? newQuestion.examples.reduce((acc,curr)=>(acc[curr]='',acc),{}) : null,\r\n                    correct: newQuestion.correct,\r\n                    points: goodChoose ? prev.points + 1 : prev.points,\r\n                    type: newQuestion.type\r\n                }))\r\n            })\r\n        }\r\n\r\n        const checkNormalQuestion = answer => {\r\n            if (question.number < question.totalQuestions) {\r\n                if (answer == question.correct) {\r\n                    setChosenAnswer({\r\n                        content: answer,\r\n                        correct: true\r\n                    })\r\n                    setTimeout(() => { loadQuestion(true) }, 3000)\r\n                } else {\r\n                    setChosenAnswer({\r\n                        content: answer,\r\n                        correct: false\r\n                    })\r\n                    setTimeout(() => { loadQuestion(false) }, 3000)\r\n                }\r\n            } else {\r\n                if (answer == question.correct) {\r\n                    setChosenAnswer({\r\n                        content: answer,\r\n                        correct: true\r\n                    })\r\n                    setTimeout(() => {\r\n                        setQuestion(prev => ({ ...prev, points: prev.points + 1 }))\r\n                        setFinished(true)\r\n                        movePointsUp({ got: question.points + 1, max: question.totalQuestions })\r\n                    }, 3000)\r\n                } else {\r\n                    setChosenAnswer({\r\n                        content: answer,\r\n                        correct: false\r\n                    })\r\n                    setTimeout(() => {\r\n                        setFinished(true)\r\n                        movePointsUp({ got: question.points, max: question.totalQuestions })\r\n                    }, 3000)\r\n                }\r\n            }\r\n        }\r\n\r\n        const checkDragableQuestion = ()=>{\r\n        \tlet flag=true\r\n        \tlet i=0\r\n        \tfor (let j in question.myDroppedAnswers){\r\n        \t\tif(question.correct[i]!=question.myDroppedAnswers[j]){\r\n        \t\t\tflag=false\r\n        \t\t}\r\n        \t\ti++\r\n        \t}\r\n        \tif(flag==true){\r\n        \t\tsetTimeout(()=>{\r\n        \tloadQuestion(true)},2000)\r\n        \t}\r\n        \telse{\r\n        \t\tsetTimeout(()=>{\r\n        \tloadQuestion()},2000)\r\n        \t}\r\n        \t}\r\n        \r\n\r\n        const onDragEnd = result => {\r\n            const { destination, source, draggableId } = result\r\n            if (!destination) {\r\n                return\r\n            }\r\n\r\n            if (destination.droppableId === source.droppableId && destination.index === source.index) {\r\n                return\r\n            }\r\n\r\n            if (destination.droppableId == 'start' && source.droppableId == 'start') {\r\n                return\r\n            } \r\n\r\n            if(question.myDroppedAnswers[destination.droppableId].length>0){\r\n            \treturn\r\n            }\r\n\r\n            if (destination.droppableId !== source.droppableId) {\r\n  \t\t\t\tconst newStartValuesArray=[]\r\n  \t\t\t\tfor (const el in question.answers){\r\n  \t\t\t\t\tnewStartValuesArray.push(question.answers[el])\r\n  \t\t\t\t}\r\n  \t\t\t\t\r\n  \t\t\t\tnewStartValuesArray.splice(source.index,1)\r\n  \t\t\t\tlet newStartValuesObject = { A: null, B: null, C: null, D: null }\r\n  \t\t\t\tlet i = 0\r\n                for (const el in newStartValuesObject) {\r\n                    newStartValuesObject.[el] = newStartValuesArray[i]\r\n                    i++\r\n                }\r\n                setQuestion(prev=>({...prev, answers:newStartValuesObject, myDroppedAnswers:{...prev.myDroppedAnswers, [destination.droppableId]:draggableId}}))\r\n            }\r\n        }\r\n\r\n        useEffect(() => {loadQuestion()}, [])\r\n        \r\n        useEffect(()=>{\r\n            \tif(question.type=='DragNDrop'){\r\n            \tlet flag=true\r\n            \tfor (let i=0; i<Object.keys(question.myDroppedAnswers).length; i++){\r\n            \t\tif(question.myDroppedAnswers[Object.keys(question.myDroppedAnswers)[i]].length==0){\r\n            \t\t\tflag=false\r\n            \t\t}\r\n            \t}\r\n            \tif(flag==true){\r\n            \t\tcheckDragableQuestion()\r\n            \t}\r\n            }\r\n        },[question.myDroppedAnswers])\r\n\r\nreturn (\r\n    <div className='question__wrapper' style={{backgroundImage: `url(\"${background}\")`, backgroundSize: \"cover\"}}>\r\n\t\t{renderHeader(question.type, question.number, question.totalQuestions)}\r\n\r\n\t\t<div className='question__content'>\r\n\t\t\t<div className='question__text'>\r\n\t\t\t\t{question.number}. {question.content}\r\n\t\t\t</div>\r\n\t\t\t\r\n\t\t\t{question.type=='normal' \r\n\t\t\t?\r\n\t\t\t<div className='normal-question__answers-wrap'>\r\n\t\t\t\t{Object.keys(question.answers).map((el)=>\r\n\t\t\t\t\t(<Answer content={question.answers[el]} chosenAnswer={{content:chosenAnswer.content, correct:chosenAnswer.correct}} letter={el} checkNormalQuestion={checkNormalQuestion} key={el}/>)\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t\t:\r\n\t\t\t<DragDropContext onDragEnd={onDragEnd}>\r\n\t\t\t\t<div className='dragable-question__answers-wrap'>\r\n\t\t\t\t\t<div className='dragable-question__dropables-wrap'>\r\n\t\t\t\t\t\t{question.examples.map((value,index)=>{\r\n\t\t\t\t\t\t\treturn(\r\n\t\t\t\t\t\t\t<Droppable droppableId={value} key={value} direction=\"horizontal\">\r\n\t\t\t\t\t\t\t\t{provided=>{\r\n\t\t\t\t\t\t\t\t\tlet dragAnswerStyle='dragable-question__dropable'\r\n\t\t\t\t\t\t\t\t\tlet doneExamples=0\r\n\t\t\t\t\t\t\t\t\tfor (let i=0;i<Object.keys(question.myDroppedAnswers).length;i++){\r\n\t\t\t\t\t\t\t\t\t\tif (question.myDroppedAnswers[Object.keys(question.myDroppedAnswers)[i]].length!=0){\r\n\t\t\t\t\t\t\t\t\t\t\tdoneExamples++\r\n\t\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\t}\r\n\r\n\t\t\t\t\t\t\t\t\tif (doneExamples==Object.keys(question.myDroppedAnswers).length){\r\n\t\t\t\t\t\t\t\t\tif(question.correct[index]==question.myDroppedAnswers[Object.keys(question.myDroppedAnswers)[index]]){\r\n\t\t\t\t\t\t\t\t\t\tdragAnswerStyle='dragable-question__dropable--right'\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t\telse if((question.correct[index]!=question.myDroppedAnswers[Object.keys(question.myDroppedAnswers)]) && (question.myDroppedAnswers[Object.keys(question.myDroppedAnswers)[index]].length>0)){\r\n\t\t\t\t\t\t\t\t\t\tdragAnswerStyle='dragable-question__dropable--wrong'\r\n\t\t\t\t\t\t\t\t\t}\r\n\t\t\t\t\t\t\t\t}\r\n\r\n\r\n\t\t\t\t\t\t\t\t\treturn(\r\n\t\t\t\t\t\t\t\t\t<div className={dragAnswerStyle}  ref={provided.innerRef} {...provided.droppableProps}>\r\n\t\t\t\t\t\t\t\t\t\t<><span>{value} - </span> <span>{question.myDroppedAnswers[Object.keys(question.myDroppedAnswers)[index]]}</span></>\r\n\t\t\t\t\t\t\t\t\t\t{provided.placeholder}\t\t\r\n\t\t\t\t\t\t\t\t\t</div>)\r\n\t\t\t\t\t\t\t\t}}\r\n\t\t\t\t\t\t\t</Droppable>)\r\n\t\t\t\t\r\n\t\t\t\t\t\t}\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</div>\r\n\r\n\t\t\t\t\t<Droppable droppableId={'start'}>\r\n\t\t\t\t\t\t{provided=>(\r\n\t\t\t\t\t\t\t<div className='dragable-question__dragables-wrap' ref={provided.innerRef} {...provided.droppableProps}>\r\n\t\t\t\t\t\t\t\t{Object.keys(question.answers).map((value,index)=>{\r\n\t\t\t\t\t\t\t\tif(question.answers[value]!=null){\r\n\t\t\t\t\t\t\t\treturn(\r\n\t\t\t\t\t\t\t\t\t<AnswerDrag value={question.answers[value]} index={index} key={question.answers[value]}/>)}\r\n\t\t\t\t\t\t\t\t})}\r\n\t\t\t\t\t\t\t\t{provided.placeholder}\r\n\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t)}\r\n\t\t\t\t\t</Droppable>\r\n\t\t\t\t</div>\r\n\t\t\t</DragDropContext>\r\n\t\t\t}\r\n\t\t</div>\r\n\t</div>\r\n)\r\n}\r\n\r\n        const Answer = ({ content, chosenAnswer=false, letter, checkNormalQuestion, }) => {\r\n            let answerStyle = 'normal-question__answer'\r\n            if (chosenAnswer.content==content) {\r\n                if (chosenAnswer.correct) {answerStyle='normal-question__answer--right'} else {answerStyle='normal-question__answer--wrong'}\r\n            }\r\n        \t\r\n            return (\r\n                <div className={answerStyle} onClick={()=>{checkNormalQuestion(content)}}>\r\n\t\t\t\t\t{letter} {content}\r\n\t\t\t\t</div>\r\n            )\r\n        }\r\n\r\n        const AnswerDrag = ({value, index}) => {  \r\n            return(\r\n                <Draggable draggableId={value} index={index}>\r\n\t\t\t\t\t{provided=>\r\n\t\t\t\t\t\t(<div className='dragable-question__dragable' {...provided.draggableProps} {...provided.dragHandleProps} ref={provided.innerRef}>\r\n\t\t\t\t\t\t\t{value}\r\n\t\t\t\t\t\t</div>)\r\n\t\t\t\t\t}\r\n\t\t\t\t</Draggable>\r\n            )\r\n        }\r\n\r\nexport default Questions","import React,{useState,useEffect} from 'react'\r\nimport Category from './category'\r\n\r\nconst Result = ({ children, category, categories, points, max, tryAgain, restartGame }) => {\r\n\t\r\n\tconst [restOfCategories,setRestOfCategories] = useState([])\r\n\tconst [background,setBackground] = useState(null)\r\n\tuseEffect(()=>{\r\n\t\tlet temp=[]\r\n\t\tfor (let i=0; i<categories.length; i++){\r\n\t\t\tif(categories[i].name!=category.name){\r\n\t\ttemp.push(categories[i])}\r\n\t\tsetRestOfCategories(temp)\r\n\t}},[])\r\n\r\n\r\nconst loadBackground = () => {\r\n            fetch('./data.json').then(res => res.json()).then(res => {\r\n            \tsetBackground(res.categories.[category.name.toLowerCase()].backgrounds.result)\r\n            \t})\r\n        }\r\n\r\n    useEffect(loadBackground,[]) \r\n\r\n    return (\r\n<div className='result__wrapper' style={{backgroundImage: `url(\"${background}\")`, backgroundSize: \"cover\"}}>\r\n\t<div className='result__header'>\r\n\t\t<div className='result__title'>\r\n\t\t\tQuiz <img onClick={restartGame} src=\"./assets/zamknij_x.svg\" alt=\"zamknij\"/>\r\n\t\t</div>\r\n\t</div>\r\n\r\n\t<div className='result__content'>\r\n\t\t<div className='result__left-section'>\r\n\t\t<div className='result__left-top'>\r\n\t\t</div>\r\n\t\t<div className='result__left-middle'>\r\n\t\t\t\t<div className='result__stripe'>TWÓJ WYNIK</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='result__left-bottom'>\r\n\t\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t<div className='result__middle-section'>\r\n\t\t\t<div className='result__middle-top'>\r\n\t\t\t{children}\r\n\t\t\t</div>\r\n\t\t\t<div className='result__middle-middle'>\r\n\t\t\t\t<div className='result__number'>{points}/{max}</div>\r\n\t\t\t</div>\r\n\t\t\t<div className='result__middle-bottom'>\r\n\t\t\t<button className='repeat__wrap' onClick={()=>{tryAgain(category.id,category.name)}}>\r\n\t\t\t\t<div className='repeat__text'>\r\n\t\t\t\t\tPOWTÓRZ QUIZ\r\n\t\t\t\t</div>\r\n\t\t\t\t<img src=\"./assets/button_strzałka.svg\"/>\r\n\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\r\n\t\t<div className='result__right-section'>\r\n\t\t\t<div className='result__other'>WYBIERZ INNĄ KATEGORIĘ:\r\n\t\t\t</div>\r\n\t\t\t<div class='result__items-wrap'>\r\n\t\t\t{restOfCategories.map(el=>(\r\n\t\t\t\t<div className='result__item' onClick={()=>{tryAgain(el.id,el.name)}} key={el.name}>\r\n\t\t\t\t\t<Category name={el.name} logo={el.logo}/>\r\n\t\t\t\t</div>\r\n\t\t\t))}\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t</div>\r\n<\r\n/div>\r\n    )\r\n}\r\n\r\nexport default Result","import React,{useState, useEffect} from 'react'\r\nimport Intro from './intro'\r\nimport Header from './header'\r\nimport Category from './category'\r\nimport Selected from './selected'\r\nimport Questions from './questions'\r\nimport Result from './result'\r\n\r\nconst Game = ()=>{\r\n\tconst [category,setCategory]=useState({id:null,name:null, started:false})\r\n\tconst [categories, setCategories] = useState([])\r\n\tconst [finished,setFinished] = useState(false)\r\n\tconst [points,setPoints]= useState({got:0,max:0})\r\n\tlet toRender=null\r\n\r\n\tuseEffect(getData, [])\r\n\r\n    function getData() {\r\n        fetch(\"./data.json\").then(res => res.json()).then(res => {\r\n            let newCategories = []\r\n            let id=0\r\n            for (const name in res.categories) {\r\n            \tid++\r\n                newCategories.push({\r\n                \tid:id,\r\n                    name: name.toUpperCase(),\r\n                    logo: `${res.categories[name].logo}`\r\n                })\r\n            }\r\n            setCategories(newCategories)\r\n        })\r\n    }\r\n\r\n    function tryAgain(id,name){\r\n    \tsetCategory({id:id,name:name, started:false})\r\n    \tsetFinished(false)\r\n    \tsetPoints({got:0, max:0})\r\n    }\r\n\r\n    if(category.name){\r\n    \tif(category.started){\r\n    \t\tif(finished){\r\n    \t\t\ttoRender= <Result category={category} categories={categories} points={points.got} max={points.max} tryAgain={tryAgain} restartGame={()=>{setCategory({id:null, name: null, started:null}); setPoints({got:null, max:null}); setFinished(null)}}>\r\n    \t\t\t<Category name={category.name} logo={categories[category.id-1].logo}  selected='--selected'/>\r\n    \t\t\t\t\t\t</Result>\r\n    \t\t}\r\n    \t\telse{\r\n    \t\t\ttoRender=<Questions category={category.name} setFinished={setFinished} movePointsUp={setPoints} renderHeader={(questionType,questionNumber,questionTotal)=>(\r\n    \t\t\t\t<Header restartGame={()=>{setCategory({id:null,name:null,started:null}); setPoints({got:0, max:0})}}>\r\n    \t\t\t\t\t{questionType=='normal' ? <span class='question__subtitle'>Wybierz prawidłową odpowiedź</span> : <span class='question__subtitle'>Przeciągnij prawidłową odpowiedź w puste miejsce</span>}\r\n\t\t\t\t\t\t<div className='question__number-wrap'>\r\n\t\t\t\t\t\t<div className='question__number'>{questionNumber}/{questionTotal}</div>\r\n\t\t\t\t\t\t</div>\r\n    \t\t\t\t</Header>\r\n    \t\t\t\t)}/>\r\n    \t\t}\r\n    \t}\r\n    \telse{\r\n    \t\ttoRender= <Selected category={category.name} setCategory={setCategory} renderHeader={()=>(<Header restartGame={()=>setCategory({id:null,name:null,started:null})}><>Wybrana kategoria:</></Header>)}>\r\n\t\t\t\t\t\t<Category name={category.name} logo={categories[category.id-1].logo}  selected='--selected'/>\r\n\t\t\t\t\t</Selected>\r\n    \t}\r\n    }\r\n    else{\r\n    \ttoRender=<Intro> \r\n\t\t\t\t\t<Header isIntro={true}>\r\n\t\t\t\t\t\t<>10 pytań/5 kategorii</>\r\n\t\t\t\t\t</Header>\r\n\t\t\t\t\t<div className='intro__content'>\r\n\t\t\t\t\t\t{categories.map((el,index)=>(<div className='intro__item' onClick={()=>{setCategory(prev=>({...prev,id:el.id,name:el.name}))}} key={index}><Category name={el.name} logo={el.logo} id={el.id} key={el.name} setCategory={setCategory}/></div>))}\t\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</Intro>\r\n    }\r\n\treturn(\r\n\t\t<>\r\n\t\t\t{toRender}\r\n\t\t</>\r\n)\r\n}\r\n\r\nexport default Game","import Game from './project2/components/game'\nimport './project2/styles/themes/default/theme.scss'\n\n\nconst App = ()=>{\n\treturn(\n\t\t<div>\n\t\t\t<Game/>\n\t\t</div>\n\t\t)\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport App from './App';\n\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nReactDOM.render(\n  <React.StrictMode>\n   <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\nreportWebVitals();\n"],"sourceRoot":""}